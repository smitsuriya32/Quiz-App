@model Exam_Management.Models.Question

@{
    ViewBag.Title = "EditQuestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Question</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


    <div class="form-group">
        @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label" })
        <span class="text-danger mx-1">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "control-label" })
        <span class="text-danger mx-1">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "control-label" })
        <span class="text-danger mx-1">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "control-label" })
        <span class="text-danger mx-1">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "control-label" })
        <span class="text-danger mx-1">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CorrectAnswer, htmlAttributes: new { @class = "control-label" })
        <span class="text-danger mx-1">*</span>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CorrectAnswer, new SelectList(new[] { "A", "B", "C", "D" }), new { htmlAttributes = new { @class = "form-control", style = "width: 250px; height: 35px;" } })
            @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-3">
                @Html.ActionLink("Back", "PaperManager",null, new { @class = "btn btn-primary" })
                <input type="submit" value="Save" class="btn btn-dark" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
